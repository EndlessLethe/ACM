

题解：
可以想到，从蜂房a到蜂房b的可能路线数等于从蜂房1到蜂房a-b+1。
题目即可等效为：从蜂房1到蜂房a-b+1的路线数。

从第一步开始考虑，有从1-2和1-3两种情况，可以联想到登楼梯的类似题目。

题目又可等效为：
从第一级到第a-b+1级阶梯，一次可登1-2级，问有多少种选择

而从“前面到第n级”开始考虑，
1.从n-2级走两级
2.从n-1级走一级

注：这里没有考虑其他的方式，因为其他方式不能 直接、不经过n-1,n-2 就到达第n级。

所以得到公式f(n) = f(n-1) + f(n-2)即斐波那契数列

有递推和递归两种思路，我使用的是递归的记忆化搜索，但还是比较推荐使用递推。


#include <bits/stdc++.h>

#define MAX 50

long long int f(int a, long long int* val);

int main()
{
	int n, i;
	scanf("%d", &n);//读入 需要读的数字对数 
	long long int res[n] = {0}, val[MAX] = {0};//定义 并初始化 result 和 函数过程的 value 
	for (i = 0; i < n; i++){
		int a = 0, b = 0;
		scanf("%d %d", &a, &b);
		a = b - a + 1;
		res[i] = f(a, val);//利用封装的函数计算出结果，并将结果交给 res数组保存 
	}
	for (i = 0; i < n; i++){	
		printf("%lld\n", res[i]);	//输出 
	}
}

long long int f(int a, long long int* val)
{
	if (val[a-1]){
		;
	}
	else if (a == 1 || a == 2) {
		val[a-1] = 1;
	}
	else{
		val[a-1] = f(a-1, val) + f(a-2, val);
	}
	return val[a-1];
}

